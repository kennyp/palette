// Code generated by "stringer -type=BookID -trimprefix=BookID"; DO NOT EDIT.

package colorbook

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[BookIDANPA-3000]
	_ = x[BookIDFocoltone-3001]
	_ = x[BookIDPantoneCoated-3002]
	_ = x[BookIDPantoneProcess-3003]
	_ = x[BookIDPantoneProSlim-3004]
	_ = x[BookIDPantoneUncoated-3005]
	_ = x[BookIDToyo-3006]
	_ = x[BookIDTrumatch-3007]
	_ = x[BookIDHKSE-3008]
	_ = x[BookIDHKSK-3009]
	_ = x[BookIDHKSN-3010]
	_ = x[BookIDHKSZ-3011]
	_ = x[BookIDDIC-3012]
	_ = x[BookIDPantonePastelCoated-3020]
	_ = x[BookIDPantonePastelUncoated-3021]
	_ = x[BookIDPantoneMetallic-3022]
}

const (
	_BookID_name_0 = "ANPAFocoltonePantoneCoatedPantoneProcessPantoneProSlimPantoneUncoatedToyoTrumatchHKSEHKSKHKSNHKSZDIC"
	_BookID_name_1 = "PantonePastelCoatedPantonePastelUncoatedPantoneMetallic"
)

var (
	_BookID_index_0 = [...]uint8{0, 4, 13, 26, 40, 54, 69, 73, 81, 85, 89, 93, 97, 100}
	_BookID_index_1 = [...]uint8{0, 19, 40, 55}
)

func (i BookID) String() string {
	switch {
	case 3000 <= i && i <= 3012:
		i -= 3000
		return _BookID_name_0[_BookID_index_0[i]:_BookID_index_0[i+1]]
	case 3020 <= i && i <= 3022:
		i -= 3020
		return _BookID_name_1[_BookID_index_1[i]:_BookID_index_1[i+1]]
	default:
		return "BookID(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
